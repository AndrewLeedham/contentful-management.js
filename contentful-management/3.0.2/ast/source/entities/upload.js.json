{
  "type": "Program",
  "body": [
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportDefaultSpecifier",
          "local": {
            "type": "Identifier",
            "name": "cloneDeep",
            "range": [
              7,
              16
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 7
              },
              "end": {
                "line": 1,
                "column": 16
              }
            }
          },
          "range": [
            7,
            16
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 7
            },
            "end": {
              "line": 1,
              "column": 16
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "lodash/cloneDeep",
        "raw": "'lodash/cloneDeep'",
        "range": [
          22,
          40
        ],
        "loc": {
          "start": {
            "line": 1,
            "column": 22
          },
          "end": {
            "line": 1,
            "column": 40
          }
        }
      },
      "range": [
        0,
        41
      ],
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 2,
          "column": 0
        }
      }
    },
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "freezeSys",
            "range": [
              50,
              59
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 9
              },
              "end": {
                "line": 2,
                "column": 18
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "freezeSys",
            "range": [
              50,
              59
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 9
              },
              "end": {
                "line": 2,
                "column": 18
              }
            }
          },
          "range": [
            50,
            59
          ],
          "loc": {
            "start": {
              "line": 2,
              "column": 9
            },
            "end": {
              "line": 2,
              "column": 18
            }
          }
        },
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "toPlainObject",
            "range": [
              61,
              74
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 20
              },
              "end": {
                "line": 2,
                "column": 33
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "toPlainObject",
            "range": [
              61,
              74
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 20
              },
              "end": {
                "line": 2,
                "column": 33
              }
            }
          },
          "range": [
            61,
            74
          ],
          "loc": {
            "start": {
              "line": 2,
              "column": 20
            },
            "end": {
              "line": 2,
              "column": 33
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "contentful-sdk-core",
        "raw": "'contentful-sdk-core'",
        "range": [
          82,
          103
        ],
        "loc": {
          "start": {
            "line": 2,
            "column": 41
          },
          "end": {
            "line": 2,
            "column": 62
          }
        }
      },
      "range": [
        41,
        104
      ],
      "loc": {
        "start": {
          "line": 2,
          "column": 0
        },
        "end": {
          "line": 3,
          "column": 0
        }
      }
    },
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportDefaultSpecifier",
          "local": {
            "type": "Identifier",
            "name": "enhanceWithMethods",
            "range": [
              111,
              129
            ],
            "loc": {
              "start": {
                "line": 3,
                "column": 7
              },
              "end": {
                "line": 3,
                "column": 25
              }
            }
          },
          "range": [
            111,
            129
          ],
          "loc": {
            "start": {
              "line": 3,
              "column": 7
            },
            "end": {
              "line": 3,
              "column": 25
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "../enhance-with-methods",
        "raw": "'../enhance-with-methods'",
        "range": [
          135,
          160
        ],
        "loc": {
          "start": {
            "line": 3,
            "column": 31
          },
          "end": {
            "line": 3,
            "column": 56
          }
        }
      },
      "range": [
        104,
        161
      ],
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 4,
          "column": 0
        }
      }
    },
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "createDeleteEntity",
            "range": [
              172,
              190
            ],
            "loc": {
              "start": {
                "line": 5,
                "column": 2
              },
              "end": {
                "line": 5,
                "column": 20
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "createDeleteEntity",
            "range": [
              172,
              190
            ],
            "loc": {
              "start": {
                "line": 5,
                "column": 2
              },
              "end": {
                "line": 5,
                "column": 20
              }
            }
          },
          "range": [
            172,
            190
          ],
          "loc": {
            "start": {
              "line": 5,
              "column": 2
            },
            "end": {
              "line": 5,
              "column": 20
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "../instance-actions",
        "raw": "'../instance-actions'",
        "range": [
          198,
          219
        ],
        "loc": {
          "start": {
            "line": 6,
            "column": 7
          },
          "end": {
            "line": 6,
            "column": 28
          }
        },
        "trailingComments": [
          {
            "type": "Block",
            "value": "*\n * @typedef {Upload} Upload\n * @property {Object} sys - Standard system metadata with additional asset specific properties\n * @property {string} sys.id - The id of the upload\n * @property {function(): Promise} delete - Deletes an upload\n * @property {function(): Object} toPlainObject - Returns this Asset as a plain JS object\n * @example\n *\n * // require contentful-management\n * var contentfulManagement = require('contentful-management')\n * var client = contentfulManagement.createClient({\n * // This is the access token for this space. Normally you get both ID and the token in the Contentful web app\n * accessToken: 'YOUR_ACCESS_TOKEN'\n * })\n *\n * var space = await client.getSpace('SPACE_ID')\n * const uploadStream = createReadStream('path/to/filename_english.jpg')\n * space.createUpload(uploadStream)\n * .then((upload) => {\n *   // Delete upload again\n *   return upload.delete()\n * })\n * .catch(err => console.log(err))\n ",
            "range": [
              221,
              1156
            ],
            "loc": {
              "start": {
                "line": 8,
                "column": 0
              },
              "end": {
                "line": 31,
                "column": 3
              }
            }
          }
        ]
      },
      "range": [
        161,
        1158
      ],
      "loc": {
        "start": {
          "line": 4,
          "column": 0
        },
        "end": {
          "line": 33,
          "column": 0
        }
      }
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "createUploadApi",
        "range": [
          1167,
          1182
        ],
        "loc": {
          "start": {
            "line": 33,
            "column": 9
          },
          "end": {
            "line": 33,
            "column": 24
          }
        }
      },
      "params": [
        {
          "type": "Identifier",
          "name": "http",
          "range": [
            1184,
            1188
          ],
          "loc": {
            "start": {
              "line": 33,
              "column": 26
            },
            "end": {
              "line": 33,
              "column": 30
            }
          }
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "ObjectExpression",
              "properties": [
                {
                  "type": "Property",
                  "key": {
                    "type": "Identifier",
                    "name": "delete",
                    "range": [
                      1443,
                      1449
                    ],
                    "loc": {
                      "start": {
                        "line": 42,
                        "column": 4
                      },
                      "end": {
                        "line": 42,
                        "column": 10
                      }
                    }
                  },
                  "value": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "createDeleteEntity",
                      "range": [
                        1451,
                        1469
                      ],
                      "loc": {
                        "start": {
                          "line": 42,
                          "column": 12
                        },
                        "end": {
                          "line": 42,
                          "column": 30
                        }
                      }
                    },
                    "arguments": [
                      {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "http",
                              "range": [
                                1478,
                                1482
                              ],
                              "loc": {
                                "start": {
                                  "line": 43,
                                  "column": 6
                                },
                                "end": {
                                  "line": 43,
                                  "column": 10
                                }
                              }
                            },
                            "value": {
                              "type": "Identifier",
                              "name": "http",
                              "range": [
                                1484,
                                1488
                              ],
                              "loc": {
                                "start": {
                                  "line": 43,
                                  "column": 12
                                },
                                "end": {
                                  "line": 43,
                                  "column": 16
                                }
                              }
                            },
                            "kind": "init",
                            "method": false,
                            "shorthand": false,
                            "computed": false,
                            "range": [
                              1478,
                              1488
                            ],
                            "loc": {
                              "start": {
                                "line": 43,
                                "column": 6
                              },
                              "end": {
                                "line": 43,
                                "column": 16
                              }
                            }
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "entityPath",
                              "range": [
                                1496,
                                1506
                              ],
                              "loc": {
                                "start": {
                                  "line": 44,
                                  "column": 6
                                },
                                "end": {
                                  "line": 44,
                                  "column": 16
                                }
                              }
                            },
                            "value": {
                              "type": "Literal",
                              "value": "uploads",
                              "raw": "'uploads'",
                              "range": [
                                1508,
                                1517
                              ],
                              "loc": {
                                "start": {
                                  "line": 44,
                                  "column": 18
                                },
                                "end": {
                                  "line": 44,
                                  "column": 27
                                }
                              }
                            },
                            "kind": "init",
                            "method": false,
                            "shorthand": false,
                            "computed": false,
                            "range": [
                              1496,
                              1517
                            ],
                            "loc": {
                              "start": {
                                "line": 44,
                                "column": 6
                              },
                              "end": {
                                "line": 44,
                                "column": 27
                              }
                            }
                          }
                        ],
                        "range": [
                          1470,
                          1523
                        ],
                        "loc": {
                          "start": {
                            "line": 42,
                            "column": 31
                          },
                          "end": {
                            "line": 45,
                            "column": 5
                          }
                        }
                      }
                    ],
                    "range": [
                      1451,
                      1524
                    ],
                    "loc": {
                      "start": {
                        "line": 42,
                        "column": 12
                      },
                      "end": {
                        "line": 45,
                        "column": 6
                      }
                    }
                  },
                  "kind": "init",
                  "method": false,
                  "shorthand": false,
                  "computed": false,
                  "range": [
                    1443,
                    1524
                  ],
                  "loc": {
                    "start": {
                      "line": 42,
                      "column": 4
                    },
                    "end": {
                      "line": 45,
                      "column": 6
                    }
                  },
                  "leadingComments": [
                    {
                      "type": "Block",
                      "value": "*\n     * Deletes this object on the server.\n     * @memberof Upload\n     * @func delete\n     * @return {Promise} Promise for the deletion. It contains no data, but the Promise error case should be handled.\n     * @example\n     ",
                      "range": [
                        1207,
                        1438
                      ],
                      "loc": {
                        "start": {
                          "line": 35,
                          "column": 4
                        },
                        "end": {
                          "line": 41,
                          "column": 7
                        }
                      }
                    }
                  ]
                }
              ],
              "range": [
                1201,
                1528
              ],
              "loc": {
                "start": {
                  "line": 34,
                  "column": 9
                },
                "end": {
                  "line": 46,
                  "column": 3
                }
              }
            },
            "range": [
              1194,
              1529
            ],
            "loc": {
              "start": {
                "line": 34,
                "column": 2
              },
              "end": {
                "line": 47,
                "column": 0
              }
            }
          }
        ],
        "range": [
          1190,
          1530
        ],
        "loc": {
          "start": {
            "line": 33,
            "column": 32
          },
          "end": {
            "line": 47,
            "column": 1
          }
        }
      },
      "generator": false,
      "expression": false,
      "range": [
        1158,
        1530
      ],
      "loc": {
        "start": {
          "line": 33,
          "column": 0
        },
        "end": {
          "line": 47,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * @typedef {Upload} Upload\n * @property {Object} sys - Standard system metadata with additional asset specific properties\n * @property {string} sys.id - The id of the upload\n * @property {function(): Promise} delete - Deletes an upload\n * @property {function(): Object} toPlainObject - Returns this Asset as a plain JS object\n * @example\n *\n * // require contentful-management\n * var contentfulManagement = require('contentful-management')\n * var client = contentfulManagement.createClient({\n * // This is the access token for this space. Normally you get both ID and the token in the Contentful web app\n * accessToken: 'YOUR_ACCESS_TOKEN'\n * })\n *\n * var space = await client.getSpace('SPACE_ID')\n * const uploadStream = createReadStream('path/to/filename_english.jpg')\n * space.createUpload(uploadStream)\n * .then((upload) => {\n *   // Delete upload again\n *   return upload.delete()\n * })\n * .catch(err => console.log(err))\n ",
          "range": [
            221,
            1156
          ],
          "loc": {
            "start": {
              "line": 8,
              "column": 0
            },
            "end": {
              "line": 31,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * @private\n * @param {Object} http - HTTP client instance\n * @param {Object} data - Raw upload data\n * @return {Asset} Wrapped upload data\n ",
          "range": [
            1532,
            1679
          ],
          "loc": {
            "start": {
              "line": 49,
              "column": 0
            },
            "end": {
              "line": 54,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "wrapUpload",
          "range": [
            1696,
            1706
          ],
          "loc": {
            "start": {
              "line": 55,
              "column": 16
            },
            "end": {
              "line": 55,
              "column": 26
            }
          }
        },
        "params": [
          {
            "type": "Identifier",
            "name": "http",
            "range": [
              1708,
              1712
            ],
            "loc": {
              "start": {
                "line": 55,
                "column": 28
              },
              "end": {
                "line": 55,
                "column": 32
              }
            }
          },
          {
            "type": "Identifier",
            "name": "data",
            "range": [
              1714,
              1718
            ],
            "loc": {
              "start": {
                "line": 55,
                "column": 34
              },
              "end": {
                "line": 55,
                "column": 38
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "VariableDeclaration",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "id": {
                    "type": "Identifier",
                    "name": "upload",
                    "range": [
                      1730,
                      1736
                    ],
                    "loc": {
                      "start": {
                        "line": 56,
                        "column": 8
                      },
                      "end": {
                        "line": 56,
                        "column": 14
                      }
                    }
                  },
                  "init": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "toPlainObject",
                      "range": [
                        1739,
                        1752
                      ],
                      "loc": {
                        "start": {
                          "line": 56,
                          "column": 17
                        },
                        "end": {
                          "line": 56,
                          "column": 30
                        }
                      }
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "cloneDeep",
                          "range": [
                            1753,
                            1762
                          ],
                          "loc": {
                            "start": {
                              "line": 56,
                              "column": 31
                            },
                            "end": {
                              "line": 56,
                              "column": 40
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "data",
                            "range": [
                              1763,
                              1767
                            ],
                            "loc": {
                              "start": {
                                "line": 56,
                                "column": 41
                              },
                              "end": {
                                "line": 56,
                                "column": 45
                              }
                            }
                          }
                        ],
                        "range": [
                          1753,
                          1768
                        ],
                        "loc": {
                          "start": {
                            "line": 56,
                            "column": 31
                          },
                          "end": {
                            "line": 56,
                            "column": 46
                          }
                        }
                      }
                    ],
                    "range": [
                      1739,
                      1769
                    ],
                    "loc": {
                      "start": {
                        "line": 56,
                        "column": 17
                      },
                      "end": {
                        "line": 56,
                        "column": 47
                      }
                    }
                  },
                  "range": [
                    1730,
                    1769
                  ],
                  "loc": {
                    "start": {
                      "line": 56,
                      "column": 8
                    },
                    "end": {
                      "line": 56,
                      "column": 47
                    }
                  }
                }
              ],
              "kind": "const",
              "range": [
                1724,
                1772
              ],
              "loc": {
                "start": {
                  "line": 56,
                  "column": 2
                },
                "end": {
                  "line": 57,
                  "column": 2
                }
              }
            },
            {
              "type": "ExpressionStatement",
              "expression": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "enhanceWithMethods",
                  "range": [
                    1772,
                    1790
                  ],
                  "loc": {
                    "start": {
                      "line": 57,
                      "column": 2
                    },
                    "end": {
                      "line": 57,
                      "column": 20
                    }
                  }
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "upload",
                    "range": [
                      1791,
                      1797
                    ],
                    "loc": {
                      "start": {
                        "line": 57,
                        "column": 21
                      },
                      "end": {
                        "line": 57,
                        "column": 27
                      }
                    }
                  },
                  {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "createUploadApi",
                      "range": [
                        1799,
                        1814
                      ],
                      "loc": {
                        "start": {
                          "line": 57,
                          "column": 29
                        },
                        "end": {
                          "line": 57,
                          "column": 44
                        }
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "http",
                        "range": [
                          1815,
                          1819
                        ],
                        "loc": {
                          "start": {
                            "line": 57,
                            "column": 45
                          },
                          "end": {
                            "line": 57,
                            "column": 49
                          }
                        }
                      }
                    ],
                    "range": [
                      1799,
                      1820
                    ],
                    "loc": {
                      "start": {
                        "line": 57,
                        "column": 29
                      },
                      "end": {
                        "line": 57,
                        "column": 50
                      }
                    }
                  }
                ],
                "range": [
                  1772,
                  1821
                ],
                "loc": {
                  "start": {
                    "line": 57,
                    "column": 2
                  },
                  "end": {
                    "line": 57,
                    "column": 51
                  }
                }
              },
              "range": [
                1772,
                1824
              ],
              "loc": {
                "start": {
                  "line": 57,
                  "column": 2
                },
                "end": {
                  "line": 58,
                  "column": 2
                }
              }
            },
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "freezeSys",
                  "range": [
                    1831,
                    1840
                  ],
                  "loc": {
                    "start": {
                      "line": 58,
                      "column": 9
                    },
                    "end": {
                      "line": 58,
                      "column": 18
                    }
                  }
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "upload",
                    "range": [
                      1841,
                      1847
                    ],
                    "loc": {
                      "start": {
                        "line": 58,
                        "column": 19
                      },
                      "end": {
                        "line": 58,
                        "column": 25
                      }
                    }
                  }
                ],
                "range": [
                  1831,
                  1848
                ],
                "loc": {
                  "start": {
                    "line": 58,
                    "column": 9
                  },
                  "end": {
                    "line": 58,
                    "column": 26
                  }
                }
              },
              "range": [
                1824,
                1849
              ],
              "loc": {
                "start": {
                  "line": 58,
                  "column": 2
                },
                "end": {
                  "line": 59,
                  "column": 0
                }
              }
            }
          ],
          "range": [
            1720,
            1850
          ],
          "loc": {
            "start": {
              "line": 55,
              "column": 40
            },
            "end": {
              "line": 59,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          1687,
          1850
        ],
        "loc": {
          "start": {
            "line": 55,
            "column": 7
          },
          "end": {
            "line": 59,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * @private\n * @param {Object} http - HTTP client instance\n * @param {Object} data - Raw upload data\n * @return {Asset} Wrapped upload data\n ",
            "range": [
              1532,
              1679
            ],
            "loc": {
              "start": {
                "line": 49,
                "column": 0
              },
              "end": {
                "line": 54,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": []
      },
      "specifiers": [],
      "source": null,
      "range": [
        1680,
        1850
      ],
      "loc": {
        "start": {
          "line": 55,
          "column": 0
        },
        "end": {
          "line": 59,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * @private\n * @param {Object} http - HTTP client instance\n * @param {Object} data - Raw upload data\n * @return {Asset} Wrapped upload data\n ",
          "range": [
            1532,
            1679
          ],
          "loc": {
            "start": {
              "line": 49,
              "column": 0
            },
            "end": {
              "line": 54,
              "column": 3
            }
          }
        }
      ]
    }
  ],
  "sourceType": "module",
  "range": [
    0,
    1850
  ],
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 59,
      "column": 1
    }
  },
  "comments": [
    {
      "type": "Block",
      "value": "*\n * @typedef {Upload} Upload\n * @property {Object} sys - Standard system metadata with additional asset specific properties\n * @property {string} sys.id - The id of the upload\n * @property {function(): Promise} delete - Deletes an upload\n * @property {function(): Object} toPlainObject - Returns this Asset as a plain JS object\n * @example\n *\n * // require contentful-management\n * var contentfulManagement = require('contentful-management')\n * var client = contentfulManagement.createClient({\n * // This is the access token for this space. Normally you get both ID and the token in the Contentful web app\n * accessToken: 'YOUR_ACCESS_TOKEN'\n * })\n *\n * var space = await client.getSpace('SPACE_ID')\n * const uploadStream = createReadStream('path/to/filename_english.jpg')\n * space.createUpload(uploadStream)\n * .then((upload) => {\n *   // Delete upload again\n *   return upload.delete()\n * })\n * .catch(err => console.log(err))\n ",
      "range": [
        221,
        1156
      ],
      "loc": {
        "start": {
          "line": 8,
          "column": 0
        },
        "end": {
          "line": 31,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n     * Deletes this object on the server.\n     * @memberof Upload\n     * @func delete\n     * @return {Promise} Promise for the deletion. It contains no data, but the Promise error case should be handled.\n     * @example\n     ",
      "range": [
        1207,
        1438
      ],
      "loc": {
        "start": {
          "line": 35,
          "column": 4
        },
        "end": {
          "line": 41,
          "column": 7
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * @private\n * @param {Object} http - HTTP client instance\n * @param {Object} data - Raw upload data\n * @return {Asset} Wrapped upload data\n ",
      "range": [
        1532,
        1679
      ],
      "loc": {
        "start": {
          "line": 49,
          "column": 0
        },
        "end": {
          "line": 54,
          "column": 3
        }
      }
    }
  ]
}